using Microsoft.EntityFrameworkCore;
using SeniorCursor.API.Models;

namespace SeniorCursor.API.Data;

public class ApplicationDbContext : DbContext
{
    public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options)
        : base(options)
    {
    }

    public DbSet<Plan> Plans { get; set; }
    public DbSet<User> Users { get; set; }
<<<<<<< HEAD
=======
    public DbSet<Cursor> Cursors { get; set; }
    public DbSet<Package> Packages { get; set; }
    public DbSet<CursorType> CursorTypes { get; set; }
>>>>>>> add dashboard and fix home page

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        base.OnModelCreating(modelBuilder);

        // Seed admin user
        modelBuilder.Entity<User>().HasData(
            new User
            {
                Id = 1,
                Username = "admin",
                PasswordHash = BCrypt.Net.BCrypt.EnhancedHashPassword("admin"),
                Role = "Admin"
            }
        );

        // Seed initial plans
        modelBuilder.Entity<Plan>().HasData(
            new Plan
            {
                Id = 1,
                Price = "10–≥—Ä–Ω (–Ω–µ –≥—Ä–æ—à—ñ)",
                Title = "üî∏ –ë–∞–∑–æ–≤–∞",
                Features = new List<string>
                {
                    "–î–æ—Å—Ç—É–ø –¥–æ –æ—Å–Ω–æ–≤–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π",
                    "–û–±–º–µ–∂–µ–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø—Ä–æ—î–∫—Ç—ñ–≤",
                    "–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –Ω–∞ email"
                }
            },
            new Plan
            {
                Id = 2,
                Price = "60–≥—Ä–Ω (—Ç–æ–∂–µ –Ω–µ –≥—Ä–æ—à—ñ)",
                Title = "üî∏ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞",
                Features = new List<string>
                {
                    "–£—Å—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –±–∞–∑–æ–≤–æ—ó –≤–µ—Ä—Å—ñ—ó",
                    "–†–æ–∑—à–∏—Ä–µ–Ω—ñ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ",
                    "–ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞"
                }
            },
            new Plan
            {
                Id = 3,
                Price = "‚àû",
                Title = "üî∏ –ü—Ä–µ–º—ñ—É–º",
                Features = new List<string>
                {
                    "–ü–æ–≤–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª",
                    "–ù–µ–æ–±–º–µ–∂–µ–Ω—ñ –ø—Ä–æ—î–∫—Ç–∏",
                    "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä",
                    "–ï–∫—Å–∫–ª—é–∑–∏–≤–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è"
                }
            }
        );
<<<<<<< HEAD
=======

        // Seed initial packages
        modelBuilder.Entity<Package>().HasData(
            new Package
            {
                Id = 1,
                Name = "–ë–∞–∑–æ–≤–∏–π –ø–∞–∫–µ—Ç",
                Description = "–ë–∞–∑–æ–≤–∏–π –Ω–∞–±—ñ—Ä –∫—É—Ä—Å–æ—Ä—ñ–≤",
                Price = 10
            },
            new Package
            {
                Id = 2,
                Name = "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π –ø–∞–∫–µ—Ç",
                Description = "–†–æ–∑—à–∏—Ä–µ–Ω–∏–π –Ω–∞–±—ñ—Ä –∫—É—Ä—Å–æ—Ä—ñ–≤",
                Price = 20
            },
            new Package
            {
                Id = 3,
                Name = "–ü—Ä–µ–º—ñ—É–º –ø–∞–∫–µ—Ç",
                Description = "–ü–æ–≤–Ω–∏–π –Ω–∞–±—ñ—Ä –∫—É—Ä—Å–æ—Ä—ñ–≤",
                Price = 30
            }
        );

        // Seed initial cursor types
        modelBuilder.Entity<CursorType>().HasData(
            new CursorType
            {
                Id = 1,
                Name = "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π",
                Description = "–ó–≤–∏—á–∞–π–Ω–∏–π –∫—É—Ä—Å–æ—Ä"
            },
            new CursorType
            {
                Id = 2,
                Name = "–ê–Ω—ñ–º–æ–≤–∞–Ω–∏–π",
                Description = "–ê–Ω—ñ–º–æ–≤–∞–Ω–∏–π –∫—É—Ä—Å–æ—Ä"
            },
            new CursorType
            {
                Id = 3,
                Name = "–¢–µ–º–∞—Ç–∏—á–Ω–∏–π",
                Description = "–¢–µ–º–∞—Ç–∏—á–Ω–∏–π –∫—É—Ä—Å–æ—Ä"
            }
        );

        modelBuilder.Entity<Cursor>()
            .HasOne(c => c.Package)
            .WithMany(p => p.Cursors)
            .HasForeignKey(c => c.PackageId)
            .OnDelete(DeleteBehavior.Restrict);

        modelBuilder.Entity<Cursor>()
            .HasOne(c => c.Type)
            .WithMany(t => t.Cursors)
            .HasForeignKey(c => c.CursorTypeId)
            .OnDelete(DeleteBehavior.Restrict);
>>>>>>> add dashboard and fix home page
    }
} 